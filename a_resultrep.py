# -*- coding: utf-8 -*-
"""A*ResultRep.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1URp_wzMrsexi203kkTiNMyCrm0plALCx
"""

import

"""# A* Alogorithm **bold text**



"""

import heapq

# Weighted graph: other Pakistani cities with approx distances (km)
graph = {
    "Sialkot": {"Gujranwala": 50, "Lahore": 125},
    "Gujranwala": {"Sialkot": 50, "Jhelum": 140},
    "Lahore": {"Sialkot": 125, "Okara": 120},
    "Jhelum": {"Gujranwala": 140, "Rawalpindi": 110},
    "Okara": {"Lahore": 120, "Bahawalpur": 300},
    "Rawalpindi": {"Jhelum": 110, "Mardan": 150},
    "Bahawalpur": {"Okara": 300, "Sukkur": 420},
    "Mardan": {"Rawalpindi": 150, "Quetta": 750},
    "Sukkur": {"Bahawalpur": 420, "Hyderabad": 480},
    "Hyderabad": {"Sukkur": 480, "Karachi": 160},
    "Quetta": {"Mardan": 750, "Karachi": 680},
    "Karachi": {"Hyderabad": 160, "Quetta": 680}
}

# Heuristic (straight-line estimates to Karachi)
heuristic = {
    "Sialkot": 1300,
    "Gujranwala": 1200,
    "Lahore": 1150,
    "Jhelum": 1000,
    "Okara": 950,
    "Rawalpindi": 900,
    "Bahawalpur": 700,
    "Mardan": 850,
    "Sukkur": 500,
    "Hyderabad": 160,
    "Quetta": 680,
    "Karachi": 0
}

def a_star(graph, start, goal, heuristic):
    open_list = []
    heapq.heappush(open_list, (heuristic[start], [start]))
    g_costs = {start: 0}
    closed_set = set()

    while open_list:
        f, path = heapq.heappop(open_list)
        node = path[-1]

        if node == goal:
            return path, g_costs[node]

        if node in closed_set:
            continue

        closed_set.add(node)

        for neighbor, cost in graph[node].items():
            tentative_g = g_costs[node] + cost
            if neighbor not in g_costs or tentative_g < g_costs[neighbor]:
                g_costs[neighbor] = tentative_g
                f_cost = tentative_g + heuristic.get(neighbor, float('inf'))
                new_path = path + [neighbor]
                heapq.heappush(open_list, (f_cost, new_path))

    return None, float('inf')


# Example run
if __name__ == "__main__":
    start_city = "Sialkot"
    goal_city = "Karachi"
    path, cost = a_star(graph, start_city, goal_city, heuristic)
    print("A* path:", path)
    print("Total cost:", cost)